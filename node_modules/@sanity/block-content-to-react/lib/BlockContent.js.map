{"version":3,"sources":["../src/BlockContent.js"],"names":["React","require","PropTypes","internals","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","createElement","SanityBlockContent","customSerializers","defaultSerializers","props","blockProps","Object","assign","blocks","propTypes","className","string","renderContainerOnSingleChild","bool","projectId","dataset","imageOptions","object","shape","types","marks","list","func","listItem","block","span","oneOfType","arrayOf","_type","isRequired","defaultProps","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,YAAYF,QAAQ,gDAAR,CAAlB;;eACkDA,QAAQ,eAAR,C;IAA3CG,W,YAAAA,W;IAAaC,a,YAAAA,a;IAAeC,W,YAAAA,W;;IAE5BC,W,GAAgDJ,S,CAAhDI,W;IAAaC,a,GAAmCL,S,CAAnCK,a;IAAeC,gB,GAAoBN,S,CAApBM,gB;;AACnC,IAAMC,aAAaV,MAAMW,aAAzB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,QAAS;AAClC,MAAMC,oBAAoBJ,iBACxBG,mBAAmBE,kBADK,EAExBC,MAAMX,WAFkB,CAA1B;;AAKA,MAAMY,aAAaC,OAAOC,MAAP,CAAc,EAAd,EAAkBZ,WAAlB,EAA+BS,KAA/B,EAAsC;AACvDX,iBAAaS,iBAD0C;AAEvDM,YAAQJ,MAAMI,MAAN,IAAgB;AAF+B,GAAtC,CAAnB;;AAKA,SAAOX,cAAcE,UAAd,EAA0BM,UAA1B,EAAsCZ,WAAtC,EAAmDC,aAAnD,CAAP;AACD,CAZD;;AAcA;AACAO,mBAAmBE,kBAAnB,GAAwCV,WAAxC;;AAEA;AACAQ,mBAAmBL,WAAnB,GAAiCA,WAAjC;;AAEAK,mBAAmBQ,SAAnB,GAA+B;AAC7BC,aAAWnB,UAAUoB,MADQ;AAE7BC,gCAA8BrB,UAAUsB,IAFX;;AAI7B;AACAC,aAAWvB,UAAUoB,MALQ;AAM7BI,WAASxB,UAAUoB,MANU;AAO7BK,gBAAczB,UAAU0B,MAPK;;AAS7BxB,eAAaF,UAAU2B,KAAV,CAAgB;AAC3B;AACAC,WAAO5B,UAAU0B,MAFU;AAG3BG,WAAO7B,UAAU0B,MAHU;;AAK3B;AACAI,UAAM9B,UAAU+B,IANW;AAO3BC,cAAUhC,UAAU+B,IAPO;;AAS3B;AACAE,WAAOjC,UAAU+B,IAVU;AAW3BG,UAAMlC,UAAU+B;AAXW,GAAhB,CATgB;;AAuB7Bd,UAAQjB,UAAUmC,SAAV,CAAoB,CAC1BnC,UAAUoC,OAAV,CACEpC,UAAU2B,KAAV,CAAgB;AACdU,WAAOrC,UAAUoB,MAAV,CAAiBkB;AADV,GAAhB,CADF,CAD0B,EAM1BtC,UAAU2B,KAAV,CAAgB;AACdU,WAAOrC,UAAUoB,MAAV,CAAiBkB;AADV,GAAhB,CAN0B,CAApB,EASLA;AAhC0B,CAA/B;;AAmCA5B,mBAAmB6B,YAAnB,GAAkC;AAChClB,gCAA8B,KADE;AAEhCnB,eAAa,EAFmB;AAGhCuB,gBAAc;AAHkB,CAAlC;;AAMAe,OAAOC,OAAP,GAAiB/B,kBAAjB","file":"BlockContent.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst internals = require('@sanity/block-content-to-hyperscript/internals')\nconst {serializers, serializeSpan, renderProps} = require('./targets/dom')\n\nconst {getImageUrl, blocksToNodes, mergeSerializers} = internals\nconst renderNode = React.createElement\n\nconst SanityBlockContent = props => {\n  const customSerializers = mergeSerializers(\n    SanityBlockContent.defaultSerializers,\n    props.serializers\n  )\n\n  const blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  })\n\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan)\n}\n\n// Expose default serializers to the user\nSanityBlockContent.defaultSerializers = serializers\n\n// Expose logic for building image URLs from an image reference/node\nSanityBlockContent.getImageUrl = getImageUrl\n\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n\n  blocks: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        _type: PropTypes.string.isRequired\n      })\n    ),\n    PropTypes.shape({\n      _type: PropTypes.string.isRequired\n    })\n  ]).isRequired\n}\n\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n}\n\nmodule.exports = SanityBlockContent\n"]}