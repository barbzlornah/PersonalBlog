"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactPopper = require("react-popper");

var _searchableStyle = _interopRequireDefault(require("part:@sanity/components/selects/searchable-style"));

var _angleDownIcon = _interopRequireDefault(require("part:@sanity/base/angle-down-icon"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _portal = require("part:@sanity/components/portal");

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _CaptureOutsideClicks = _interopRequireDefault(require("../utilities/CaptureOutsideClicks"));

var _Escapable = _interopRequireDefault(require("../utilities/Escapable"));

var _Stacked = _interopRequireDefault(require("../utilities/Stacked"));

var _SelectMenu = _interopRequireDefault(require("./SelectMenu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var sameWidthModifier = {
  name: 'sameWidth',
  enabled: true,
  phase: 'beforeWrite',
  requires: ['computeStyles'],

  fn(_ref) {
    var state = _ref.state;
    state.styles.popper.width = "".concat(state.rects.reference.width, "px");
  }

};

var StatelessSearchableSelect = /*#__PURE__*/_react.default.forwardRef( // eslint-disable-next-line complexity
(props, ref) => {
  var onClear = props.onClear,
      placeholder = props.placeholder,
      isLoading = props.isLoading,
      value = props.value,
      _props$items = props.items,
      items = _props$items === void 0 ? [] : _props$items,
      isOpen = props.isOpen,
      _props$highlightIndex = props.highlightIndex,
      highlightIndex = _props$highlightIndex === void 0 ? -1 : _props$highlightIndex,
      isInputSelected = props.isInputSelected,
      inputValue = props.inputValue,
      onChange = props.onChange,
      onInputChange = props.onInputChange,
      onOpen = props.onOpen,
      onClose = props.onClose,
      _props$dropdownPositi = props.dropdownPosition,
      dropdownPosition = _props$dropdownPositi === void 0 ? 'bottom-start' : _props$dropdownPositi,
      disabled = props.disabled,
      onHighlightIndexChange = props.onHighlightIndexChange,
      openItemElement = props.openItemElement,
      readOnly = props.readOnly,
      renderItemProp = props.renderItem,
      rest = _objectWithoutProperties(props, ["onClear", "placeholder", "isLoading", "value", "items", "isOpen", "highlightIndex", "isInputSelected", "inputValue", "onChange", "onInputChange", "onOpen", "onClose", "dropdownPosition", "disabled", "onHighlightIndexChange", "openItemElement", "readOnly", "renderItem"]);

  var itemsLen = items.length;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      referenceElement = _useState2[0],
      setReferenceElement = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      popperElement = _useState4[0],
      setPopperElement = _useState4[1];

  var popper = (0, _reactPopper.usePopper)(referenceElement, popperElement, {
    placement: dropdownPosition,
    modifiers: [{
      name: 'preventOverflow',
      options: {
        altAxis: true,
        padding: 8,
        tether: false
      }
    }, sameWidthModifier]
  });
  var handleSelect = (0, _react.useCallback)(item => {
    if (onChange) onChange(item);
  }, [onChange]);
  var handleClose = (0, _react.useCallback)(event => {
    if (onClose) onClose(event);
  }, [onClose]);
  var handleArrowClick = (0, _react.useCallback)(() => {
    if (isOpen) {
      handleClose();
    } else if (onOpen) onOpen();
  }, [handleClose, isOpen, onOpen]);
  var handleArrowKeyPress = (0, _react.useCallback)(event => {
    if (event.key === 'Enter') {
      handleArrowClick();
    }
  }, [handleArrowClick]);
  var handleInputChange = (0, _react.useCallback)(event => {
    if (onInputChange) onInputChange(event.target.value);
  }, [onInputChange]);
  var handleKeyDown = (0, _react.useCallback)( // eslint-disable-next-line complexity
  event => {
    if (event.key === 'ArrowDown' && !isOpen) {
      if (onOpen) onOpen();
    }

    if (itemsLen === 0) {
      return;
    }

    var lastIndex = itemsLen - 1;

    if (event.key === 'ArrowUp') {
      event.preventDefault();
      var nextIndex = highlightIndex - 1;

      if (onHighlightIndexChange) {
        onHighlightIndexChange(nextIndex < 0 ? lastIndex : nextIndex);
      }
    }

    if (event.key === 'ArrowDown') {
      event.preventDefault();
      if (!isOpen && onOpen) onOpen();

      var _nextIndex = highlightIndex + 1;

      if (onHighlightIndexChange) {
        onHighlightIndexChange(_nextIndex > lastIndex ? 0 : _nextIndex);
      }
    }
  }, [highlightIndex, isOpen, itemsLen, onHighlightIndexChange, onOpen]);
  var handleKeyUp = (0, _react.useCallback)(event => {
    if (event.key === 'Enter' && highlightIndex > -1 && items[highlightIndex]) {
      if (onChange) onChange(items[highlightIndex]);
    }
  }, [highlightIndex, items, onChange]);
  var renderItem = (0, _react.useCallback)(item => {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: _searchableStyle.default.item
    }, renderItemProp(item));
  }, [renderItemProp]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    ref: setReferenceElement,
    className: disabled ? _searchableStyle.default.selectContainerDisabled : _searchableStyle.default.selectContainer
  }, /*#__PURE__*/_react.default.createElement(_default2.default, _extends({}, rest, {
    className: _searchableStyle.default.select,
    placeholder: placeholder,
    onChange: handleInputChange,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    value: inputValue || '',
    selected: isInputSelected,
    disabled: disabled,
    ref: ref,
    spellCheck: "false",
    readOnly: readOnly
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _searchableStyle.default.functions
  }, openItemElement && value && /*#__PURE__*/_react.default.createElement("span", {
    className: _searchableStyle.default.openItem
  }, openItemElement(value)), !readOnly && onClear && value && /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    className: _searchableStyle.default.clearButton,
    onClick: onClear
  }, /*#__PURE__*/_react.default.createElement(_closeIcon.default, null)), !readOnly && /*#__PURE__*/_react.default.createElement("div", {
    className: _searchableStyle.default.arrowAndSpinnerContainer
  }, !isLoading && /*#__PURE__*/_react.default.createElement("div", {
    className: _searchableStyle.default.arrow,
    onClick: disabled ? undefined : handleArrowClick,
    tabIndex: 0,
    onKeyPress: disabled ? undefined : handleArrowKeyPress
  }, /*#__PURE__*/_react.default.createElement(_angleDownIcon.default, null)), isLoading && /*#__PURE__*/_react.default.createElement("div", {
    className: _searchableStyle.default.spinner
  }, /*#__PURE__*/_react.default.createElement(_spinner.default, null))))), isOpen && /*#__PURE__*/_react.default.createElement(_portal.Portal, null, /*#__PURE__*/_react.default.createElement(_Stacked.default, null, isActive => /*#__PURE__*/_react.default.createElement("div", _extends({
    ref: setPopperElement,
    className: _searchableStyle.default.popper,
    style: popper.styles.popper
  }, popper.attributes.popper), /*#__PURE__*/_react.default.createElement(_CaptureOutsideClicks.default, {
    onClickOutside: isActive && isOpen ? handleClose : undefined
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: itemsLen === 0 ? _searchableStyle.default.listContainerNoResult : _searchableStyle.default.listContainer
  }, /*#__PURE__*/_react.default.createElement(_Escapable.default, {
    onEscape: handleClose
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: itemsLen === 0 && !isLoading ? _searchableStyle.default.noResultText : _searchableStyle.default.noResultTextHidden
  }, "No results"), itemsLen > 0 && /*#__PURE__*/_react.default.createElement(_SelectMenu.default, {
    items: items,
    value: value,
    onSelect: handleSelect,
    renderItem: renderItem,
    highlightIndex: highlightIndex
  })))))));
});

StatelessSearchableSelect.displayName = 'StatelessSearchableSelect';
var _default = StatelessSearchableSelect;
exports.default = _default;